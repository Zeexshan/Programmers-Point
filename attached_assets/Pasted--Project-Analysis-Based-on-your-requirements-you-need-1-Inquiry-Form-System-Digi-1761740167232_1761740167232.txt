## 📋 Project Analysis

Based on your requirements, you need:

1. **Inquiry Form System** - Digital replacement for paper forms
2. **Placement Showcase** - Company/student cards with details
3. **Interactive Course Explorer** - Drag-and-drop like Infinite Craft
4. **Data Export** - Excel/Google Sheets integration for follow-ups

## 🎯 Recommended Solution

### **Technology Stack: Progressive Web App (PWA)**

**Primary Technology:** React.js with the following stack:
- **Frontend:** React + Tailwind CSS
- **Storage:** Firebase (Firestore + Storage)
- **Deployment:** Vercel/Netlify
- **Data Export:** Google Sheets API integration

### Why PWA instead of Native App?

✅ **Works on tablets** - Can be installed like an app
✅ **No app store needed** - Direct APK or just open in browser
✅ **Easier updates** - Just refresh the site
✅ **Cross-platform** - Works on Android tablets, iPads, and laptops
✅ **Offline capability** - Can work without internet (with proper setup)

## 🏗️ Technical Architecture

### **Feature 1: Digital Inquiry Form**

**Implementation:**
```
Form Submission → Firebase Firestore → Auto-sync to Google Sheets
```

**Data Flow:**
- Student fills form on tablet
- Data saved to Firebase Firestore (real-time database)
- Firebase Cloud Function triggers on new entry
- Automatically adds row to Google Sheets
- Phone numbers formatted for easy copy-paste

**Google Sheets Integration:**
- Use Google Sheets API with service account
- Auto-append new inquiries to sheet
- Separate columns: Name, Phone, Email, Course Interest, Date, Status (Joined/Pending)

### **Feature 2: Placement Cards System**

**Structure:**
```
Companies Collection
├── TCS
│   ├── Students Array
│   │   ├── Student 1 (Name, Package, Phone, Photo, Profile, Course, Review)
│   │   └── Student 2
├── Infosys
└── Google
```

**UI Flow:**
1. Tab shows company cards (with company logo, total placements, avg package)
2. Click company → Shows student cards
3. Click student → Full details modal with photo, review, course details
4. Phone number masked by default, "Show Number" button

**Admin Panel Needed:**
- Add/edit/delete companies
- Add/edit/delete student placements
- Upload student photos
- Manage reviews

### **Feature 3: Interactive Course Explorer (Infinite Craft Style)**

**Implementation Strategy:**

**Technology:** React DnD (Drag and Drop) or React Flow library

**Data Structure:**
```json
{
  "courses": {
    "frontend": {
      "name": "Front End",
      "items": ["HTML/CSS", "JavaScript", "React", "React Native"],
      "color": "#3B82F6"
    },
    "backend": {
      "name": "Back End",
      "items": ["Java", "Python", "Django", "Node.js"],
      "color": "#10B981"
    },
    "database": {
      "name": "Database",
      "items": ["MySQL", "MongoDB", "PostgreSQL"],
      "color": "#F59E0B"
    }
  },
  "technologies": {
    "React": {
      "description": "Modern UI library",
      "avgPackage": "6-12 LPA",
      "vacancies": 1500,
      "companies": ["TCS", "Infosys", "Wipro"],
      "appsBuiltWith": ["Facebook", "Instagram", "Netflix"]
    },
    "Java": {
      "description": "Enterprise backend language",
      "avgPackage": "5-10 LPA",
      "vacancies": 2500,
      "runningOn": "3 billion devices",
      "companies": ["TCS", "Accenture", "Capgemini"]
    }
  },
  "combinations": {
    "React + Java": {
      "name": "Full Stack Java Developer",
      "avgPackage": "8-15 LPA",
      "vacancies": 3000,
      "description": "Build complete enterprise applications"
    }
  }
}
```

**UI Features:**
- Drag "React" from Frontend section
- Drag "Java" from Backend section
- Drop them together → Combines into "Full Stack" card
- Shows: Package range, vacancies, job profiles, scope
- Visual effects like Infinite Craft (animations, particle effects)

**Libraries to Use:**
- **react-dnd** or **dnd-kit** - Drag and drop
- **framer-motion** - Smooth animations
- **recharts** - Graphs for package trends
- **lucide-react** - Icons

## 📱 Tablet Installation Options

### **Option 1: PWA (Recommended)**
- Open website in Chrome on tablet
- Tap "Add to Home Screen"
- Works like a native app
- Auto-updates

### **Option 2: Webview APK**
- Wrap PWA in Android WebView
- Use **TWA (Trusted Web Activity)** or **Capacitor**
- Generate APK
- Install directly on tablet

### **Option 3: Direct Website**
- Just bookmark the website
- Use in fullscreen mode (kiosk mode)

## 🗄️ Database Schema (Firebase Firestore)

```
Collections:

1. inquiries/
   - name, fatherName, phone, email, dob
   - courseInterest, college, branch
   - timestamp, status (pending/joined)

2. companies/
   - companyName, logo, totalPlacements
   - avgPackage

3. placements/
   - studentName, companyId, package
   - phoneNumber, photoURL, profile
   - courseCompleted, review, joiningDate

4. courses/
   - category (frontend/backend/database)
   - items array

5. technologies/
   - name, description, avgPackage
   - vacancies, companies array
   - examplesArray
```

## 📤 Data Export Strategy

### **Automatic Google Sheets Sync:**

**Setup Steps:**
1. Create Google Cloud Project
2. Enable Google Sheets API
3. Create Service Account
4. Share Google Sheet with service account email
5. Use Firebase Cloud Function to append data

**What Gets Exported:**
- **Sheet 1 "Inquiries":** All form submissions with phone numbers
- **Sheet 2 "Not Joined":** Filtered list (Status = Pending) - easy to copy phones
- **Sheet 3 "Joined":** Students who enrolled
- Auto-updates in real-time

**Manual Export Option:**
- Admin panel button to download Excel
- Uses **SheetJS (xlsx)** library
- Generates Excel file with all data

## 🎨 UI/UX Design Approach

### **Design Style:**
- **Modern glassmorphism** for cards
- **Dark mode** with vibrant accents
- **Touch-optimized** - Large buttons (min 44x44px)
- **Smooth animations** for professional feel
- **Company branding** - Your institute colors

### **Navigation:**
```
Home Screen:
├── 📝 New Inquiry (Main CTA)
├── 🏆 Our Placements
├── 🎓 Explore Courses (Interactive)
└── ℹ️ About Us

Admin Panel (Password Protected):
├── View Inquiries
├── Manage Placements
├── Edit Course Data
└── Export Data
```

## 🔧 Development Roadmap

### **Phase 1: Core Setup (Week 1)**
- Set up React project with Vite
- Configure Firebase
- Build inquiry form with validation
- Set up Google Sheets integration

### **Phase 2: Placement System (Week 2)**
- Create company cards UI
- Build student detail views
- Add photo upload functionality
- Phone number masking feature

### **Phase 3: Interactive Course Explorer (Week 2-3)**
- Implement drag-and-drop
- Create technology database
- Build combination logic
- Add animations and effects

### **Phase 4: Polish & Deploy (Week 3-4)**
- Admin panel
- PWA configuration
- Testing on tablet
- Deployment

## 📦 Complete Tech Stack Summary

```
Frontend: React 18 + Vite
Styling: Tailwind CSS
UI Components: Shadcn/ui
Database: Firebase Firestore
Storage: Firebase Storage (for photos)
Authentication: Firebase Auth (for admin)
Drag-Drop: dnd-kit
Animations: Framer Motion
Charts: Recharts
Icons: Lucide React
Forms: React Hook Form + Zod
Sheets API: Google Sheets API v4
Excel Export: SheetJS (xlsx)
Hosting: Vercel
```

## 🚀 Instructions for Replit

When you ask Replit to build this, provide them with:

1. **This technical plan**
2. **Your institute's branding** (colors, logo)
3. **Sample data** for companies and courses
4. **Google account** for Sheets integration

**Key prompt for Replit:**
"Build a React PWA for a programming institute inquiry system with three main features: 1) Digital inquiry form with Google Sheets auto-sync, 2) Company-wise placement showcase with student cards, 3) Interactive drag-and-drop course explorer similar to Infinite Craft game. Use Firebase for backend, Tailwind for styling, and make it tablet-optimized."

---